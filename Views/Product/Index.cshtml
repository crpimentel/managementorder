@using System.Linq
@{
    var productList = ViewBag.ProductList;
    var AppCount = 0;
    var CardCount = 0;
    var WebCount = 0;
    var limitOfFilter = productList.Count % 3;

}
<main class="main">

    <!-- Hero Section -->
    <section id="hero" class="hero section dark-background">

        <div id="hero-carousel" data-bs-interval="5000" class="container carousel carousel-fade" data-bs-ride="carousel">
            @for (int i = 0; i < productList.Count; i++)
            {
                if (i == 0)
                {
                    <!-- Slide 1 -->
                    <div class="carousel-item active">
                        <div class="carousel-container">
                            <h2 class="animate__animated animate__fadeInDown">Marca: <span>@productList[i].Name</span></h2>
                            <p class="animate__animated animate__fadeInUp">@productList[i].Description</p>
                            <a href="#about" class="btn-get-started animate__animated animate__fadeInUp scrollto">Crear Producto</a>
                        </div>
                    </div>
                }
                else
                {
                    <!-- Other Slide 2 -->
                    <div class="carousel-item">
                        <div class="carousel-container">
                            <h2 class="animate__animated animate__fadeInDown">@productList[i].Name</h2>
                            <p class="animate__animated animate__fadeInUp">@productList[i].Description</p>
                            <a href="#about" class="btn-get-started animate__animated animate__fadeInUp scrollto">Read More</a>
                        </div>
                    </div>
                }
            }

            <a class="carousel-control-prev" href="#hero-carousel" role="button" data-bs-slide="prev">
                <span class="carousel-control-prev-icon bi bi-chevron-left" aria-hidden="true"></span>
            </a>

            <a class="carousel-control-next" href="#hero-carousel" role="button" data-bs-slide="next">
                <span class="carousel-control-next-icon bi bi-chevron-right" aria-hidden="true"></span>
            </a>

        </div>

        <svg class="hero-waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28 " preserveAspectRatio="none">
            <defs>
                <path id="wave-path" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"></path>
            </defs>
            <g class="wave1">
                <use xlink:href="#wave-path" x="50" y="3"></use>
            </g>
            <g class="wave2">
                <use xlink:href="#wave-path" x="50" y="0"></use>
            </g>
            <g class="wave3">
                <use xlink:href="#wave-path" x="50" y="9"></use>
            </g>
        </svg>

    </section><!-- /Hero Section -->
    <section id="about" class="contact section">

        <!-- Section Title -->
        <div class="container section-title" data-aos="fade-up">
            <h2>Creación de </h2>
            <p>Productos</p>
        </div><!-- End Section Title -->

        <div class="container" data-aos="fade" data-aos-delay="100">

            <div class="row gy-4">

                <div class="col-lg-4">
                    <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="200">
                        <i class="bi bi-geo-alt flex-shrink-0"></i>
                        <div>
                            <h3>Direción Fast Order </h3>
                            <p>Abraham Lincoln, Rep Dom.</p>
                        </div>
                    </div><!-- End Info Item -->

                    <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="300">
                        <i class="bi bi-telephone flex-shrink-0"></i>
                        <div>
                            <h3>Llamanos </h3>
                            <p>+1 809-849-7934</p>
                        </div>
                    </div><!-- End Info Item -->

                    <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="400">
                        <i class="bi bi-envelope flex-shrink-0"></i>
                        <div>
                            <h3>Email </h3>
                            <p>ibsfastorder@gmail.com</p>
                        </div>
                    </div><!-- End Info Item -->

                </div>

                <div class="col-lg-8">
                    @model ProductViewModel
                    <form asp-controller="Product" asp-action="Create" enctype="multipart/form-data" method="post" class="php-email-form" data-aos="fade-up" data-aos-delay="200">
                        <div class="row gy-4">

                            <div class="col-md-6">

                                <input asp-for="Name" type="text" class="form-control" placeholder="Nombre" required="">
                            </div>
                            <div class="col-md-6">

                                <input asp-for="Description" type="text" class="form-control" placeholder="Descripción" required="">
                            </div>
                            <div class="col-md-6 ">
                                <input asp-for="Price" type="number" step="0.01" min="0" class="form-control" placeholder="Precio" required="">
                            </div>

                            <div class="col-md-12">
                                <input asp-for="Stock" type="number" min="0" class="form-control" placeholder="Cantidad" required="">
                            </div>
                            <div class="col-md-12">
                                <input asp-for="Images" type="file" multiple />
                            </div>

                            <div class="col-md-12 text-center">
                                <div class="loading">Loading</div>
                                <div class="error-message"></div>
                                <div class="sent-message">Producto creado con éxito. Gracias!</div>

                                <button type="submit">Crear</button>
                            </div>

                        </div>
                    </form>
                </div><!-- End Contact Form -->

            </div>

        </div>

    </section><!-- /Contact Section -->
    <!-- Services Section -->
    <section id="services" class="services section">
        <!-- Section Title -->
        <div class="container section-title" data-aos="fade-up">
            <h2>Gestión de</h2>
            <p>Ordenes</p>
        </div><!-- End Section Title -->
        <div class="container" data-aos="fade" data-aos-delay="100">
            @await Html.PartialAsync("~/Views/Client/CustomerOrders.cshtml")
        </div>
    </section><!-- /Services Section -->
    <!-- Portfolio Section -->
    <section id="portfolio" class="portfolio section">

        <!-- Section Title -->
        <div class="container section-title" data-aos="fade-up">
            <h2>Portfolio</h2>
            <p>Lo tenemos y te gusta!</p>
        </div><!-- End Section Title -->

        <div class="container">

            <div class="isotope-layout" data-default-filter="*" data-layout="masonry" data-sort="original-order">

                <ul class="portfolio-filters isotope-filters" data-aos="fade-up" data-aos-delay="100">
                    <li data-filter="*" class="filter-active">All</li>
                    <li data-filter=".filter-app">App</li>
                    <li data-filter=".filter-product">Card</li>
                    <li data-filter=".filter-branding">Web</li>
                </ul><!-- End Portfolio Filters -->

                <div class="row gy-4 isotope-container" data-aos="fade-up" data-aos-delay="200">
                    @for (int i = 0; i < productList.Count; i++)
                    {
                        var imageItems = productList[i].ProductImages;

                        foreach (var imageItem in imageItems)
                        {
                            // Convert the image data to a base64 string
                            var base64Image = Convert.ToBase64String(imageItem.ImageData);
                            // Determine the image type (e.g., "image/jpeg", "image/png")
                            var imageType = imageItem.ImageType; //"image/jpeg"; // Change this as needed if imageIte
                            if (AppCount <= limitOfFilter)
                            {
                                AppCount++;
                                <div class="col-lg-4 col-md-6 portfolio-item isotope-item filter-app">
                                    <img src="data:@imageType;base64,@base64Image" class="img-fluid" alt="">
                                    <div class="portfolio-info">
                                        <h4>@productList[i].Name</h4>
                                        <p>@productList[i].Description</p>
                                    </div>
                                </div>
                                <!-- End Portfolio Item -->
                            }
                            else if (CardCount <= limitOfFilter)
                            {
                                CardCount++;
                                <div class="col-lg-4 col-md-6 portfolio-item isotope-item filter-product">
                                    <img src="data:@imageType;base64,@base64Image" class="img-fluid" alt="">
                                    <div class="portfolio-info">
                                        <h4>@productList[i].Name</h4>
                                        <p>@productList[i].Description</p>
                                    </div>
                                </div>

                                <!-- End Portfolio Item -->
                            }
                            else if (WebCount <= limitOfFilter)
                            {
                                WebCount++;
                                <div class="col-lg-4 col-md-6 portfolio-item isotope-item filter-branding">
                                    <img src="data:@imageType;base64,@base64Image" class="img-fluid" alt="">
                                    <div class="portfolio-info">
                                        <h4>@productList[i].Name</h4>
                                        <p>@productList[i].Description</p>
                                    </div>
                                </div>
                                <!-- End Portfolio Item -->
                            }
                            else
                            {
                                <div class="col-lg-4 col-md-6 portfolio-item isotope-item filter-app">
                                    <img src="data:@imageType;base64,@base64Image" class="img-fluid" alt="">
                                    <div class="portfolio-info">
                                        <h4>@productList[i].Name</h4>
                                        <p>@productList[i].Description</p>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div><!-- End Portfolio Container -->

            </div>

        </div>

    </section><!-- /Portfolio Section -->
</main>
@section Scripts
{
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script>

    <script>
        function format(d) {
            let ordersHtml = d.orders.map(order => {
                let productsHtml = order.products.map(product => `
                                 <tr>
                                     <td style="padding: 8px; border: 1px solid #ddd;">${product.productName}</td>
                                     <td style="padding: 8px; border: 1px solid #ddd;">$${parseFloat(product.productPrice).toFixed(2)}</td>
                                     <td style="padding: 8px; border: 1px solid #ddd;">${product.productStock}</td>
                                     <td style="padding: 8px; border: 1px solid #ddd;">${product.productDesc}</td>
                                 </tr>
                             `).join('');
                return `
                                 <div style="border: 1px solid #ddd; padding: 15px; margin: 10px 0; background-color: #f9f9f9;">
                                     <h4 style="color: #333; font-weight: bold; margin-bottom: 10px;">Detalle de la Orden: ${order.orderNumber}</h4>
                                     <div style="padding: 5px 0; font-size: 14px;">
                                         <strong>Fecha de Creación:</strong> ${new Date(order.orderDate).toLocaleDateString()}
                                     </div>
                                     <table style="width: 100%; border-collapse: collapse; margin-top: 15px;">
                                         <thead>
                                             <tr style="background-color: #e9e9e9;">
                                                 <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Producto</th>
                                                 <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Precio</th>
                                                 <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Cantidad</th>
                                                 <th style="padding: 8px; border: 1px solid #ddd; text-align: left;">Descripción</th>
                                             </tr>
                                         </thead>
                                         <tbody>
                                             ${productsHtml}
                                         </tbody>
                                     </table>
                                 </div>
                             `;
            }).join('');
            return `
                             <div>
                                 <h4 style="font-weight: bold;">Detalle del Cliente: ${d.name}</h4>
                                 <div style="padding: 5px 0; font-size: 14px;">
                                     <strong>Email:</strong> ${d.email}
                                 </div>
                                 ${ordersHtml} <!-- Insert the orders HTML here -->
                             </div>
                         `;
        }

        function initializeCustomerOrdersTable() {

            const table = new DataTable('#example', {
                ajax: {
                    url: '@Url.Action("GetCustomerOrdersData", "Client")',
                    data: function (d) {
                        d.draw = d.draw;
                        d.searchValue = $('#dt-search-0').val();
                        return d;
                    },
                },
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
                },

                columns: [
                    {
                        class: 'dt-control',
                        orderable: false,
                        data: null,
                        defaultContent: ''
                    },
                    { data: 'name' }, // Map to 'name' in the response
                    { data: 'email' }, // Map to 'email' in the response
                ],
                order: [[1, 'asc']],
                processing: true,
                serverSide: true,
            });
            const detailRows = [];

            table.on('click', 'tbody td.dt-control', function () {
                let tr = event.target.closest('tr');
                let row = table.row(tr);
                let idx = detailRows.indexOf(tr.id);

                if (row.child.isShown()) {
                    tr.classList.remove('details');
                    row.child.hide();
                    detailRows.splice(idx, 1);
                } else {
                    tr.classList.add('details');
                    row.child(format(row.data())).show();
                    if (idx === -1) {
                        detailRows.push(tr.id);
                    }
                }
            });
            table.on('draw', () => {
                detailRows.forEach((id, i) => {
                    //if (id === null) {
                    let el = document.querySelector('#' + id + ' td.dt-control');
                    if (el) {
                        el.dispatchEvent(new Event('click', { bubbles: true }));
                    }


                });
            });
        }
        $(document).ready(function () {
            initializeCustomerOrdersTable();
        });
    </script>
}